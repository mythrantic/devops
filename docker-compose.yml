---
volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local
  promtail-data:
    driver: local
  portainer_data:
    driver: local



services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - /etc/prometheus:/config
      - prometheus-data:/prometheus
      - ./ansible/roles/docker_deploy/files/prometheus/:/etc/prometheus/
    command: "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
    expose:
      - 9090
    networks:
      - dokploy-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.valiantlynx.com`)
      - traefik.http.routers.prometheus.entrypoints=web
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  loki:
    image: grafana/loki:latest
    container_name: loki 
    ports:
      - "9029:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - dokploy-network
    volumes:
      - /etc/prometheus:/config
      - loki-data:/loki
      - ./ansible/roles/docker_deploy/files/loki/:/etc/loki/
    restart: unless-stopped
    expose:
      - 3100
    labels:
      - traefik.enable=true
      - traefik.http.routers.loki.rule=Host(`loki.valiantlynx.com`)
      - traefik.http.routers.loki.entrypoints=web
      - traefik.http.services.loki.loadbalancer.server.port=3100


  promtail:
    image: grafana/promtail:latest
    container_name: promtail 
    volumes:
      - /var/log:/var/log
      - /etc/promtail:/config
      - promtail-data:/promtail
      - ./ansible/roles/docker_deploy/files/promtail/:/etc/promtail/
    command: -config.file=/etc/promtail/config.yml
    networks:
      - dokploy-network
    ports:
      - "1514:1514"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 9002:3000
    volumes:
      - grafana-data:/var/lib/grafana
      - ./ansible/roles/docker_deploy/files/grafana/:/etc/grafana/
    restart: unless-stopped
    networks:
      - dokploy-network
    expose:
      - 3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.valiantlynx.com`)
      - traefik.http.routers.grafana.entrypoints=web
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    ports:
      - 9003:9100
    command: 
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    networks:
      - dokploy-network
    volumes:
      - '/:/host:ro,rslave'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - 9004:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - dokploy-network

  uptime-kuma:
    image: louislam/uptime-kuma:1
    container_name: uptime-kuma
    ports:
      - 9005:3001
    volumes:
      - ./ansible/roles/docker_deploy/files/uptime-kuma:/app/data
    restart: always
    networks:
      - dokploy-network
    expose:
      - 3001
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptime-kuma.rule=Host(`uptime.valiantlynx.com`)
      - traefik.http.routers.uptime-kuma.entrypoints=web
      - traefik.http.services.uptime-kuma.loadbalancer.server.port=3001

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9006:9093
    volumes:
      - ./ansible/roles/docker_deploy/files/alertmanager/:/etc/alertmanager/
    networks:
      - dokploy-network
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'   
    expose:
      - 9093
    labels:
      - traefik.enable=true
      - traefik.http.routers.alertmanager.rule=Host(`alertmanager.valiantlynx.com`)
      - traefik.http.routers.alertmanager.entrypoints=web
      - traefik.http.services.alertmanager.loadbalancer.server.port=9093

  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - 9030:9000
      - 9031:9443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data 
    networks:
      - dokploy-network
    expose:
      - 9000
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.rule=Host(`portainer.valiantlynx.com`)
      - traefik.http.routers.portainer.entrypoints=web
      - traefik.http.services.portainer.loadbalancer.server.port=9000


  dcgm_exporter:
    image: nvcr.io/nvidia/k8s/dcgm-exporter:latest
    container_name: dcgm_exporter
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    restart: always
    environment:
      - DCGM_EXPORTER_NO_HOSTNAME=1
    cap_add:
      - SYS_ADMIN
    networks:
      - dokploy-network
    expose:
      - 9400
    labels:
      - traefik.enable=true
      - traefik.http.routers.dcgm_exporter.rule=Host(`dcgm.valiantlynx.com`)
      - traefik.http.routers.dcgm_exporter.entrypoints=web
      - traefik.http.services.dcgm_exporter.loadbalancer.server.port=9400


networks:
  dokploy-network:
